{"version":3,"sources":["../src/index.js"],"names":["initializeLicensing","ujoConfig","web3","getWeb3","getNetwork","networkId","licensingHandlerAddress","ETHUSDHandler","LicensingHandler","eth","Contract","abi","License","cid","buyer","beneficiaries","amounts","notifiers","getOracleAddress","oracleAddress","wei","utils","toWei","amountsInWei","map","amount","methods","pay","estimateGas","from","value","gasRequired","gas","send"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;SAK8BA,mB;;;;;;;4BAAf,kBAAmCC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,IADO,GACAD,SAAS,CAACE,OAAV,EADA;AAAA;AAAA,mBAEWF,SAAS,CAACG,UAAV,EAFX;;AAAA;AAEPC,YAAAA,SAFO;AAGPC,YAAAA,uBAHO,GAGmB,8BAAmBC,iCAAnB,EAAkCF,SAAlC,CAHnB;AAIPG,YAAAA,gBAJO,GAIY,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBH,kCAAcI,GAApC,EAAyCL,uBAAzC,CAJZ;AAAA,8CAMN;AACLM,cAAAA,OAAO;AAAA;AAAA;AAAA,0CAAE,iBAAOC,GAAP,EAAYC,KAAZ,EAAmBC,aAAnB,EAAkCC,OAAlC,EAA2CC,SAA3C,EAAsDR,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACqBR,SAAS,CAACiB,gBAAV,EADrB;;AAAA;AACDC,0BAAAA,aADC;AAGP,8BAAIV,GAAJ,EAASW,GAAG,GAAGlB,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiBb,GAAjB,EAAsB,OAAtB,CAAN,CAHF,CAKP;;AACMc,0BAAAA,YANC,GAMcP,OAAO,CAACQ,GAAR,CAAY,UAAAC,MAAM;AAAA,mCAAIvB,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiBG,MAAjB,EAAyB,OAAzB,CAAJ;AAAA,2BAAlB,CANd;AAAA;AAAA,iCAQmBjB,gBAAgB,CAACkB,OAAjB,CACvBC,GADuB,CAEtBd,GAFsB,EAGtBM,aAHsB,EAGP;AACfL,0BAAAA,KAJsB,EAIf;AACPC,0BAAAA,aALsB,EAKP;AACfQ,0BAAAA,YANsB,EAMR;AACdN,0BAAAA,SAPsB,CAOX;AAPW,4BASvBW,WATuB,CASX;AACXC,4BAAAA,IAAI,EAAEf,KADK;AAEXgB,4BAAAA,KAAK,EAAEV;AAFI,2BATW,CARnB;;AAAA;AAQDW,0BAAAA,WARC;AAsBDC,0BAAAA,GAtBC,GAsBK,oBAASD,WAAT,CAtBL;AAAA,2DAwBAvB,gBAAgB,CAACkB,OAAjB,CAAyBC,GAAzB,CAA6Bd,GAA7B,EAAkCM,aAAlC,EAAiDL,KAAjD,EAAwDC,aAAxD,EAAuEQ,YAAvE,EAAqF,EAArF,EAAyFU,IAAzF,CAA8F;AACnGJ,4BAAAA,IAAI,EAAEf,KAD6F;AAEnGgB,4BAAAA,KAAK,EAAEV,GAF4F;AAGnGY,4BAAAA,GAAG,EAAHA;AAHmG,2BAA9F,CAxBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADF,aANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { boostGas, getContractAddress } from '../../utils/dist';\nimport { ETHUSDHandler } from '../../contracts-licensing';\n\n/**\n * Initialize Licensing\n *\n * @param {Object} ujoConfig contains network configuration and optional propertiess\n */\nexport default async function initializeLicensing(ujoConfig) {\n  const web3 = ujoConfig.getWeb3();\n  const networkId = await ujoConfig.getNetwork();\n  const licensingHandlerAddress = getContractAddress(ETHUSDHandler, networkId);\n  const LicensingHandler = new web3.eth.Contract(ETHUSDHandler.abi, licensingHandlerAddress);\n\n  return {\n    License: async (cid, buyer, beneficiaries, amounts, notifiers, eth) => {\n      const oracleAddress = await ujoConfig.getOracleAddress();\n      let wei;\n      if (eth) wei = web3.utils.toWei(eth, 'ether');\n\n      // Convert ether amounts to wei\n      const amountsInWei = amounts.map(amount => web3.utils.toWei(amount, 'ether'));\n\n      const gasRequired = await LicensingHandler.methods\n        .pay(\n          cid,\n          oracleAddress, // which oracle to use for reference\n          buyer, // address\n          beneficiaries, // addresses\n          amountsInWei, // in wei\n          notifiers, // contract notifiers [none in this case]\n        )\n        .estimateGas({\n          from: buyer,\n          value: wei,\n        });\n\n      const gas = boostGas(gasRequired);\n\n      return LicensingHandler.methods.pay(cid, oracleAddress, buyer, beneficiaries, amountsInWei, []).send({\n        from: buyer,\n        value: wei,\n        gas,\n      });\n    },\n  };\n}\n"],"file":"index.js"}